//------------------------------------------------
//--- 010 Editor v9.0.2 Binary Template
//
//      File: 
//   Authors: Silvris
//   Version: 
//   Purpose: 
//  Category: 
// File Mask: 
//  ID Bytes: 
//   History: 
//------------------------------------------------
//names/alternative names provided by NSA Cloud
#include "Audiokinetics RIFF.bt"
local int i;
typedef struct{
	uint ID<bgcolor=0xFF0000>;
	uint unkn;
	uint Length;
	uint Offset<format=hex,bgcolor=0x00FF00>;
	uint language;
}embeddedMediaStruct;

typedef struct(uint headerStart){
    uint postHeaderOffset;
    uint index;
    local uint retVal = FTell();
    FSeek(headerStart + postHeaderOffset);
    wstring value;
    FSeek(retVal);
}stringData;

string readStringData(stringData &s){
    return s.value;
};

struct stringInfo(uint length){
    local uint stringHeaderStart = FTell();
    uint stringDataCount;
    for(i=0;i<stringDataCount;i++){
        stringData stringdata(stringHeaderStart)<read=readStringData>;
    };
    FSeek(stringHeaderStart + length);
};

char AKPKHeader[4];
uint HeaderLength;//dataOffset
uint unkn2;
uint languageLength;
uint bnkTableLength;//bankIndexLength
uint wemTableLength;//mediaIndexLength
uint unkn6;//unknStructLength, apparently not present in Capcom pcks
stringInfo strings(languageLength);
uint bnkCount;//possible bankIndex value?
embeddedMediaStruct bnks[bnkCount];
uint wemCount;
embeddedMediaStruct wems[wemCount];
uint unknStructCount;//normally 0
if(FileSize() > (HeaderLength+8)){
    //blocks "header only" pcks
    struct EmbeddedWems{
        for(i=0;i<wemCount;i++){
            FSeek(wems[i].Offset);
            RIFF embeddedAudio;
        };
    }embeddedWems;
};